<?php

function islandora_utils_plugin_export_islandora_utils_plugin() {
  return array(
    'export' => array (
      'title' => 'Export object',
      'module' => 'islandora_utils_plugin_export',
      'file' => 'ExportObjectPlugin.inc',
      'class' => 'ExportObjectPlugin',
      'function' => "process",
      'description' => 'Sync objects between 2 fedoras and download objects locally',
    ),
  );
}


function islandora_utils_plugin_export_form_alter(&$form, &$form_state, $form_id) {
  //dsm($form_id,'form id');
  switch ($form_id) {
    case 'islandora_utils_settings_form':
    case 'islandora_utils_form':
      $form['islandora_utils_plugin_options']['islandora_utils_plugin_export'] = array(
        '#type' => 'fieldset',
        '#title' => t('Plugin Export Options'),
        '#collapsible' => TRUE,
        '#collapsed' => FALSE,
      );

      $form['islandora_utils_plugin_options']['islandora_utils_plugin_export']['islandora_utils_plugin_export_download_remote'] = array(
        '#type' => 'checkbox',
        '#title' => t('Download object from remote'),
        '#default_value' => variable_get('islandora_utils_plugin_export_download_remote', ''),
      );

      $form['islandora_utils_plugin_options']['islandora_utils_plugin_export']['islandora_utils_plugin_export_download_local'] = array(
        '#type' => 'checkbox',
        '#title' => t('Download object from local'),
        '#default_value' => variable_get('islandora_utils_plugin_export_download_local', ''),
      );

      $form['islandora_utils_plugin_options']['islandora_utils_plugin_export']['islandora_utils_plugin_export_ingest_local'] = array(
        '#type' => 'checkbox',
        '#title' => t('Sync remote to local'),
        '#default_value' => variable_get('islandora_utils_plugin_export_ingest_local', ''),
        '#description' => t('Select run query of remote if querying PIDS with RI'),
      );

      $form['islandora_utils_plugin_options']['islandora_utils_plugin_export']['islandora_utils_plugin_export_ingest_local_purge'] = array(
        '#type' => 'checkbox',
        '#title' => t('Purge local PID'),
        '#default_value' => variable_get('islandora_utils_plugin_export_ingest_local_purge', ''),
        '#description' => t('First purge local PID when syncing remote to local'),
      );
      /*
      $form['islandora_utils_plugin_options']['islandora_utils_plugin_export']['islandora_utils_plugin_export_download_version'] = array(
        '#type' => 'checkbox',
        '#title' => t('Download object -- all versions'),
        '#default_value' => variable_get('islandora_utils_plugin_export_download_version', ''),
      );

      $form['islandora_utils_plugin_options']['islandora_utils_plugin_export']['islandora_utils_plugin_export_ingest_remote'] = array(
        '#type' => 'checkbox',
        '#title' => t('Local object to remote islandora'),
        '#default_value' => variable_get('islandora_utils_plugin_export_ingest_remote', ''),
      );

      */

    break;
  }

}

function islandora_utils_plugin_export_islandora_utils_plugin_process_complete($results = NULL) {

  if (isset($results['plugin_export'])) {
    $export = $results['plugin_export'];

    $file_name = 'structure.txt';
    $file_dir_uri = $export['download_file_dir_uri'];
    $structure_file = file_create_filename($file_name, $file_dir_uri);
    $fp = fopen($structure_file, 'w');

    foreach ($export['file_list'] as $key => $value) {
      $text = $value['pid'] . "\t" . $value['dsid'] . "\t" . $value['label'] . "\t" . $value['mimetype'] . "\t" . $value['filename'];
      fwrite($fp, $text . "\r");
    }
    fclose($fp);

    $tar = new ArchiverTar($file_dir_uri . '.tar');
    $tar->add($file_dir_uri);
    drupal_set_message(t('Your file can be downloaded ' . l('here.', file_create_url($file_dir_uri . '.tar'), array('attributes' => array('target' => '_blank')))), 'status');
  }
}