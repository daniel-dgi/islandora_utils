<?php

function islandora_utils_permission() {
  return array();
}

function islandora_utils_menu() {

  $items['admin/islandora/utils'] = array(
    'title' => 'Islandora Utils',
    'description' => 'Advanced admin functionality for Islandora',
    'page callback' => 'islandora_utils_admin_page',
    'page arguments' => array('home'),
    'access callback' => TRUE,
  );

  $items['admin/islandora/utils/home'] = array(
    'title' => 'Home',
    'description' => 'Islandora Utility settings',
    'page callback' => 'islandora_utils_admin_page',
    'page arguments' => array('home'),
    'access callback' => TRUE,
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['admin/islandora/utils/settings'] = array(
    'title' => 'Settings',
    'description' => 'Islandora Utility settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_utils_settings_form'),
    'access callback' => TRUE,
    'file' => 'admin/islandora_utils.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

function islandora_utils_admin_page($tab = '') {
  switch ($tab) {
    case 'home' :
    default :
      $output = drupal_get_form('islandora_utils_form');
  }
  return $output;
}

function islandora_utils_form($form, &$form_state) {
  $form = array();

  $form['islandora_utils_query'] = array(
    '#type' => 'fieldset',
    '#title' => t('RI Query'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    );

  $form['islandora_utils_query']['query'] = array(
    '#type' => 'textarea',
    '#title' => t('Query'),
    );

  $form['islandora_utils_query']['history'] = array(
    '#type' => 'item',
    '#markup' => t('save query history to db'),
    );

  $form['islandora_utils_pids'] = array(
    '#type' => 'textarea',
    '#title' => t('List of pids'),
    '#description' => t('space seperated list of pids'),
    '#default_value' => 'islandora:299',
    );

  $form['islandora_utils_plugins'] = array(
    '#type' => 'fieldset',
    '#title' => t('Plugins'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    );

  $plugins = module_invoke_all('islandora_utils_plugin');
  $form_state['storage']['plugins'] = $plugins;
  
  /**
   *
   * @todo make this re-arrangable for doing a order of operatations on a object
   */
  foreach($plugins as $plugin => $details) {
    $form['islandora_utils_plugins']["plugin-$plugin"] = array(
      '#type' => 'checkbox',
      '#title' => t($details['title']),
      '#description' => t($details['description']),
    );
  }

  $form['islandora_utils_plugin_options'] = array(
    '#type' => 'fieldset',
    '#title' => t('Plugin options'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
    '#weight' => 10000,
  );

  return $form;
}
function islandora_utils_validate_object_form($form, &$form_state) {


  return $form;
}


function islandora_utils_form_submit($form, &$form_state) {
  module_load_include('inc', 'islandora', 'includes/tuque');
  module_load_include('inc', 'islandora', 'includes/utilities');
  $values = $form_state['values'];
  $pids_raw = explode(' ', $values['islandora_utils_pids']);

  $pids = array();
  foreach ($pids_raw as $pid) {
    if(islandora_is_valid_pid($pid)) {
      $pids[] = $pid;
    }
  }

  islandora_utils_process_objects($pids, $form_state);

  return $form;
}

function islandora_utils_process_objects($pids = array(), $form_state) {
  module_load_include('inc', 'islandora', 'includes/IslandoraTuque');
  module_load_include('inc', 'islandora', 'includes/utilities');
  $results = array();

  $plugins_raw = $form_state['storage']['plugins'];
  $plugins = array();

  foreach($plugins_raw as $plugin => $details) {
    if($form_state['values']["plugin-$plugin"]) {
      $plugins[$plugin] = $details;
    }
  }

  foreach($plugins as $plugin) {
    if($plugin['module'] && $plugin['file']) {
    $path = drupal_get_path('module', $plugin['module']) . '/' . $plugin['file'];
    if(is_readable($path)) {
      require_once($path);
      $plugin_class = $plugin['class'];
      $plugin_function = $plugin['function'];
      $run = FALSE;
      if (class_exists($plugin_class)) {
        $implementation = new $plugin_class();

        if(method_exists($implementation, $plugin_function)) {
          $run = TRUE;
          unset($implementation);
        }
        else {
          dsm('func is missing');
        }
      }
      else {
          dsm('class is missing');
      }

      if ($run) {
        foreach($pids as $pid) {
          $implementation = new $plugin_class($pid, $form_state);
          $implementation->$plugin_function();
          $results = array_merge($results, $implementation->get_results()); //work this out
        }

      }
      else {
        dsm('cant run class/function');
      }

      }
      else {
        dsm('file is not readable');
      }
    }

  }

  islandora_utils_write_result($results);
}

function islandora_utils_islandora_utils_plugin() {
  return array(
    'validate' => array (
      'title' => 'Validate Objects',
      'module' => 'islandora_utils',
      'file' => 'plugins/ValidateObjectPlugin.inc',
      'class' => 'ValidateObjectPlugin',
      'function' => "process",
      'description' => 'validate objects and ds against this...',
      'what' => 'else?'
    ),
  );
}
function islandora_utils_validate_object($pids = array()) {

  islandora_utils_write_result($results);
}

/**
 *
 * @param type $results
 *  array (
 *    array(
 *      type(status/error)
 *      pid
 *      message
 *    )
 * )
 */
function islandora_utils_write_result($results = array()) {
  global $base_url;
  //drupal_get_messages('status');
  //drupal_get_messages('error');
  if(variable_get('islandora_utils_output_settings_sort', '')) {
    foreach ($results as $key => $row) {
      $results_sorted[$key]  = $row['type'];
    }
    $results_sorted = array_map('strtolower', $results_sorted);
    array_multisort($results_sorted, SORT_ASC, $results);
  }


  if(variable_get('islandora_utils_output_settings_output_file', '')) {
    $file_name = 'islandora_utils_'.date('Y-m-d-h:i:s').'.txt';
    $file_dir = variable_get('file_public_path', file_directory_temp());
    $results_file = file_create_filename($file_name, $file_dir);
    $fp = fopen($results_file, 'w');
  }
  foreach($results as $result) {
    if($result['type'] == 'status' && !variable_get('islandora_utils_output_settings_output_everything', '')) {
      continue;
    }

    if(variable_get('islandora_utils_output_settings_output_screen', '')) {
      drupal_set_message('<pre>'.$result['type'] . "\t" . $result['pid'] . "\t" . $result['message'].'</pre>', 'status');
    }
    if(variable_get('islandora_utils_output_settings_output_file', '')) {
      $text = $result['type'] . "\t" . $result['pid'] . "\t" . $result['message'];
      fwrite($fp, $text."\r");
    }
  }

  if(variable_get('islandora_utils_output_settings_output_file', '')) {
    fclose($fp);
    drupal_set_message(t('View results here >> '.l('View', $base_url.'/'.$results_file)));
  }
}

function islandora_utils_clean_result_files() {
  //foreach file in drupal file dir that starts with islandora_utilites - unlink
}